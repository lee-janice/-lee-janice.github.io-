{"version":3,"file":"component---src-pages-journal-tsx-cb368e7b9d798c50c502.js","mappings":"kKAqIA,UA3HiC,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAC1BC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAC/BC,EAAQR,EAAKS,aAAaF,MAEhC,OACI,gBAAC,IAAD,CAAQH,MAAOH,GACX,gBAAC,IAAD,CAAMG,MAAM,WAAWM,SAAU,CAAC,aAClC,8BACI,sCACA,qBAAGC,UAAU,YAAb,sEACA,qBAAGA,UAAU,YAAb,0CAKJ,+BACI,uBAAKA,UAAS,gBACV,6CACA,2BACCH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACV,OACI,uBAAKC,IAAKD,EAAKE,MACX,0BACI,gBAAC,EAAAC,KAAD,CAAMC,GAAE,YAAcJ,EAAKE,KAAnB,KAA6BF,EAAKE,WAK1D,2BACA,4CACA,2BACCV,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJT,EAAQS,EAAKK,YAAYd,OAASS,EAAKM,OAAOC,KACpD,OACI,uBAAKN,IAAKD,EAAKM,OAAOC,MAClB,0BACI,gBAAC,EAAAJ,KAAD,CAAMC,GAAIJ,EAAKM,OAAOC,MAAOhB,IAEjC,6BAAQS,EAAKK,YAAYG,MACzB,qBAAGC,wBAAyB,CAAEC,OAAQV,EAAKW","sources":["webpack://acozy-space/./src/pages/journal.tsx"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n    readonly data: PageQueryData\n}\n\nconst Journal: React.FC<Props> = ({ data }) => {\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const years = data.allDirectory.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head title=\"Journal.\" keywords={[`journal`]} />\n            <header>\n                <h1>Journal.</h1>\n                <p className='subtitle'>Collection of all journal entries; entries by year; recent entries</p>\n                <p className='pageinfo'>\n                    2021-09-26 â—‹\n                    last updated: 2021-09-27\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    <h2>Entries by year</h2>\n                    <hr />\n                    {years.map(({ node }) => {\n                        return (\n                            <div key={node.name}>\n                                <h3>\n                                    <Link to={`/journal/${node.name}/`}>{node.name}</Link>\n                                </h3>\n                            </div>\n                        )\n                    })}\n                    <br />\n                    <h2>Recent entries</h2>\n                    <hr />\n                    {posts.map(({ node }) => {\n                        const title = node.frontmatter.title || node.fields.slug\n                        return (\n                            <div key={node.fields.slug}>\n                                <h3>\n                                    <Link to={node.fields.slug}>{title}</Link>\n                                </h3>\n                                <small>{node.frontmatter.date}</small>\n                                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n        }\n    }\n    allMarkdownRemark: {\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    date: string\n                    title: string\n                    subtitle: string\n                }\n            }\n        }[]\n        group: {\n            fieldValue: string\n            totalCount: number\n        }[]\n    }\n    allDirectory: {\n        edges: {\n            node: {\n                name: string\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {category: {eq: \"journal\"}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 1000)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            subtitle\n          }\n        }\n      }\n    }\n    allDirectory(\n        filter: {relativeDirectory: {regex: \"/journal$/\"}}\n        sort: {fields: name, order: DESC}\n    ) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n  }\n`\n\nexport default Journal"],"names":["data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","years","allDirectory","keywords","className","map","node","key","name","Link","to","frontmatter","fields","slug","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}