{"version":3,"file":"component---src-templates-booknote-tsx-62baddf4d3996618f57e.js","mappings":"6NAwCA,EA3B+B,SAAC,GAUzB,IATHA,EASE,EATFA,MASE,IARFC,YAAAA,OAQE,MARY,KAQZ,EAPFC,EAOE,EAPFA,WACAC,EAME,EANFA,aACAC,EAKE,EALFA,QAKE,IAJFC,MAAAA,OAIE,MAJM,KAIN,EAHFC,EAGE,EAHFA,WAGE,KAFFC,KAEE,EADFC,UAAAA,OACE,MADS,KACT,EACF,OACIC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,aAAAA,KACIA,EAAAA,cAAAA,IAAAA,KAAID,GAAYR,GAChBS,EAAAA,cAAAA,SAAAA,KACKR,EAAcA,EAAc,KAAO,GACpCQ,EAAAA,cAAAA,KAAAA,KAAAA,WAAaP,EAAb,KAA2BC,EAA3B,WAAiDC,GAFrD,iBAGiBE,IAGpBD,EAAQI,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,cAAhB,UAA2CL,GAAe,GACxEI,EAAAA,cAAAA,KAAAA,QCjBNE,GAAWC,EAAAA,EAAAA,IAAO,KAAPA,CAAHC,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,yHAqId,EA5H0C,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACzCC,EAAOF,EAAKG,eACZC,EAAYJ,EAAKK,KAAKC,aAAaC,MACjCC,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KACZC,EAASV,EAAKW,WAAWD,OAE/B,OACIf,EAAAA,cAACiB,EAAAA,EAAD,CAAQL,MAAOH,GACXT,EAAAA,cAACkB,EAAAA,EAAD,CAAMN,MAAOL,EAAKY,YAAYP,MAAOpB,YAAae,EAAKa,UACvDpB,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAKO,EAAKY,YAAYP,OACtBZ,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,YAAYM,EAAKY,YAAYE,UAC1CrB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,YACRM,EAAKY,YAAYG,KADtB,oBAEmBf,EAAKY,YAAYI,YAFpC,cAGahB,EAAKY,YAAYK,OAAOC,KAAI,SAACC,EAAOC,EAAGC,GAAX,OACjC5B,EAAAA,cAAC6B,EAAAA,KAAD,CAAMC,GAAE,WAAaJ,EAAb,KACFC,EAAIC,EAAIG,OAAS,EAAKL,EAAQ,KAAOA,QAIvD1B,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKC,UAAS,gBACVD,EAAAA,cAAAA,MAAAA,CAAKgC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QAC7ClC,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAAA,UACAA,EAAAA,cAAAA,KAAAA,MACCe,EAAOU,KAAI,SAAAU,GAAS,OACjBnC,EAAAA,cAACoC,EAAD,eACIC,IAAgBF,EAAU5C,MAC1BE,WAAgB0C,EAAUG,eAC1B5C,aAAgByC,EAAUI,cAC1B5C,QAAgBwC,EAAUK,aACtBL,QAIhBnC,EAAAA,cAACE,EAAD,KACKW,GACGb,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAAC6B,EAAAA,KAAD,CAAMC,GAAIjB,EAAS4B,OAAOC,KAAMC,IAAI,QAApC,KACO9B,EAASM,YAAYP,QAInCE,GACGd,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAAC6B,EAAAA,KAAD,CAAMC,GAAIhB,EAAK2B,OAAOC,KAAMC,IAAI,QAC3B7B,EAAKK,YAAYP,MADtB","sources":["webpack://acozy-space/./src/components/quote.tsx","webpack://acozy-space/./src/templates/booknote.tsx"],"sourcesContent":["import React from 'react'\n\ninterface Props {\n    readonly quote: string,\n    readonly description?: string,\n    readonly chapternum: number,\n    readonly chaptertitle: string,\n    readonly pagenum: number,\n    readonly notes?: string,\n    readonly importance: number,\n    readonly tags?: [string],\n}\n\nconst Quote: React.FC<Props> = ({\n    quote,\n    description = null,\n    chapternum,\n    chaptertitle,\n    pagenum,\n    notes = null,\n    importance,\n    tags = null,\n    children = null\n}) => {\n    return (\n        <div>\n            <blockquote>\n                <p>{children || quote}</p>\n                <footer>\n                    {description ? description + \"; \" : \"\"}\n                    <em>chapter {chapternum} ({chaptertitle}), page {pagenum}</em>;\n                    importance: {importance}\n                </footer>\n            </blockquote>\n            {notes ? <div><span className=\"newthought\">Note: </span>{notes}</div> : \"\"}\n            <br />\n        </div>\n    )\n}\n\nexport default Quote","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { styled } from '../styles/theme'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport Quote from '../components/quote'\n\ninterface Props {\n    readonly data: PageQueryData\n    readonly pageContext: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        previous?: any\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        next?: any\n    }\n}\n\nconst StyledUl = styled('ul')`\n  list-style-type: none;\n\n  li::before {\n    content: '' !important;\n    padding-right: 0 !important;\n  }\n`\n\nconst BookNoteTemplate: React.FC<Props> = ({ data, pageContext }) => {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata.title\n    const { previous, next } = pageContext\n    const quotes = data.quotesYaml.quotes\n\n    return (\n        <Layout title={siteTitle}>\n            <Head title={post.frontmatter.title} description={post.excerpt} />\n            <header>\n                <h1>{post.frontmatter.title}</h1>\n                <p className='subtitle'>{post.frontmatter.subtitle}</p>\n                <p className='pageinfo'>\n                    {post.frontmatter.date} ○\n                    last updated: {post.frontmatter.lastupdated} ○\n                    topics: {post.frontmatter.topics.map((topic, i, arr) => \n                        <Link to={`/topics/${topic}/`}>\n                            {(i < arr.length - 1) ? topic + ', ' : topic}\n                        </Link>)}\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                    <section>\n                        <h2>Quotes</h2>\n                        <hr></hr>\n                        {quotes.map(bookQuote => \n                            <Quote\n                                key          = {bookQuote.quote}\n                                chapternum   = {bookQuote.chapter_number}\n                                chaptertitle = {bookQuote.chapter_title}\n                                pagenum      = {bookQuote.page_number}\n                                {...bookQuote} />\n                            )\n                        }\n                    </section>\n                    <StyledUl>\n                        {previous && (\n                            <li>\n                                <Link to={previous.fields.slug} rel=\"prev\">\n                                    ← {previous.frontmatter.title}\n                                </Link>\n                            </li>\n                        )}\n                        {next && (\n                            <li>\n                                <Link to={next.fields.slug} rel=\"next\">\n                                    {next.frontmatter.title} →\n                                </Link>\n                            </li>\n                        )}\n                    </StyledUl>\n                </div>\n            </article>\n        </Layout >\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n        }\n    }\n    markdownRemark: {\n        id?: string\n        excerpt?: string\n        html: string\n        frontmatter: {\n            title: string\n            subtitle: string\n            date: string\n            lastupdated: string\n            topics: [string]\n        }\n    }\n    quotesYaml: {\n        quotes: [{\n            chapter_number: number\n            chapter_title: string\n            description?: string\n            page_number: number\n            importance: number\n            quote: string\n            notes?: string\n            tags?: [string]\n        }]\n    }\n}\n\nexport const pageQuery = graphql`\n  query BookPage($slug: String!, $author: String = \"\", $title: String = \"\") {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 1000)\n      html\n      frontmatter {\n        title\n        subtitle\n        date\n        lastupdated\n        topics\n      }\n    }\n    quotesYaml(author: {eq: $author}, title: {eq: $title}) {\n      quotes {\n        chapter_number\n        chapter_title\n        description\n        page_number\n        quote\n        importance\n        notes\n      }\n    }\n  }\n`\n\nexport default BookNoteTemplate"],"names":["quote","description","chapternum","chaptertitle","pagenum","notes","importance","tags","children","React","className","StyledUl","styled","_templateObject","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","quotes","quotesYaml","Layout","Head","frontmatter","excerpt","subtitle","date","lastupdated","topics","map","topic","i","arr","Link","to","length","dangerouslySetInnerHTML","__html","html","bookQuote","Quote","key","chapter_number","chapter_title","page_number","fields","slug","rel"],"sourceRoot":""}