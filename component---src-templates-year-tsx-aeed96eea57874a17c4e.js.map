{"version":3,"file":"component---src-templates-year-tsx-aeed96eea57874a17c4e.js","mappings":"4KA8JA,UA/IsC,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,KAC7BC,EADqD,EAAlBC,YACnCD,KACFE,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,QAAQD,MACrBE,EAAST,EAAKU,aAAaC,MAC3BC,EAAUZ,EAAKa,kBAAkBF,MAEvC,OACI,gBAAC,IAAD,CAAQL,MAAOH,GACX,gBAAC,IAAD,CACIG,MAAK,QAAUL,EAAV,IACLa,SAAU,CAAC,UAAWb,KAE1B,8BACI,kCAAUA,EAAV,KACA,qBAAGc,UAAU,YAAb,qCAA2Dd,EAA3D,sBACA,qBAAGc,UAAU,YAAb,0CAKJ,+BACI,uBAAKA,UAAS,gBACV,8CACA,2BACCN,EAAOO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACLC,GAAYC,EAAAA,EAAAA,GAAkBF,EAAKG,MACnCC,EAAQd,EAAMe,QAAO,SAACC,GAAD,OAAcA,EAASC,WAAWC,OAAO,KAAOR,EAAKG,QAAM,GAEtF,GAAKC,EACL,OACI,uBAAKK,IAAKT,EAAKG,MACX,0BACI,gBAAC,EAAAO,KAAD,CAAMC,GAAE,YAAc3B,EAAd,IAAsBgB,EAAKG,KAA3B,KAAqCF,EAAY,IAAMjB,IAEnE,6BACKoB,EAAMQ,WADX,QAE0B,IAArBR,EAAMQ,WAAmB,IAAM,WAKhD,2BACA,0BAAK5B,EAAL,YACA,2BACCW,EAAQI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNX,EAAQW,EAAKa,YAAYxB,OAASW,EAAKc,OAAOC,KACpD,OACI,uBAAKN,IAAKT,EAAKc,OAAOC,MAClB,0BACI,gBAAC,EAAAL,KAAD,CAAMC,GAAIX,EAAKc,OAAOC,MAAO1B,IAEjC,6BAAQW,EAAKa,YAAYG,MACzB,qBAAGC,wBAAyB,CAAEC,OAAQlB,EAAKmB,oB,mBClD3E,IAlBA,SAA2BC,GACvB,QAASA,GACL,KAAK,EAAK,MAAO,UACjB,KAAK,EAAK,MAAO,WACjB,KAAK,EAAK,MAAO,QACjB,KAAK,EAAK,MAAO,QACjB,KAAK,EAAK,MAAO,MACjB,KAAK,EAAK,MAAO,OACjB,KAAK,EAAK,MAAO,OACjB,KAAK,EAAK,MAAO,SACjB,KAAK,EAAK,MAAO,YACjB,KAAK,GAAM,MAAO,UAClB,KAAK,GAAM,MAAO,WAClB,KAAK,GAAM,MAAO,WAClB,QAAW,MAAO","sources":["webpack://acozy-space/./src/templates/year.tsx","webpack://acozy-space/./src/util/monthNumberToName.ts"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport monthNumberToName from '../util/monthNumberToName'\n\ninterface Props {\n    readonly data: PageQueryData\n    readonly pageContext: {\n        year: string\n        mthDirRegexByYear: string\n    }\n}\n\nconst YearTemplate: React.FC<Props> = ({ data, pageContext }) => {\n    const { year } = pageContext\n    const siteTitle = data.site.siteMetadata.title\n    const group = data.allFile.group\n    const months = data.allDirectory.edges\n    const entries = data.allMarkdownRemark.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head\n                title={`Year:${year}.`}\n                keywords={[`journal`, year]}\n            />\n            <header>\n                <h1>Year:{year}.</h1>\n                <p className='subtitle'>Collection of journal entries for {year}; entries by month</p>\n                <p className='pageinfo'>\n                    2021-09-18 â—‹\n                    last updated: 2021-09-26\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    <h2>Entries by month</h2>\n                    <hr />\n                    {months.map(({ node }) => {\n                        const monthName = monthNumberToName(node.name)\n                        const month = group.filter((monthDir) => monthDir.fieldValue.slice(-2) === node.name)[0]\n                        // if the year/month folder doesn't contain .md files, return\n                        if (!month) return\n                        return (\n                            <div key={node.name}>\n                                <h3>\n                                    <Link to={`/journal/${year}/${node.name}/`}>{monthName + \" \" + year}</Link>\n                                </h3>\n                                <small>\n                                    {month.totalCount} entr\n                                    {month.totalCount === 1 ? 'y' : 'ies'}\n                                </small>\n                            </div>\n                        )\n                    })}\n                    <br />\n                    <h2>{year} entries</h2>\n                    <hr />\n                    {entries.map(({ node }) => {\n                        const title = node.frontmatter.title || node.fields.slug\n                        return (\n                            <div key={node.fields.slug}>\n                                <h3>\n                                    <Link to={node.fields.slug}>{title}</Link>\n                                </h3>\n                                <small>{node.frontmatter.date}</small>\n                                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n        }\n    }\n    allDirectory: {\n        edges: {\n            node: {\n                name: string\n            }\n        }[]\n    }\n    allFile: {\n        group: {\n            fieldValue: string\n            totalCount: number\n        }[]\n    }\n    allMarkdownRemark: {\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    date: string\n                    title: string\n                    subtitle: string\n                }\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query YearPage($mthDirRegexByYear: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allDirectory(\n        filter: { relativePath: {regex: $mthDirRegexByYear} }\n        sort: {fields: name, order: ASC}\n    ) {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n    allFile(filter: {relativePath: {regex: $mthDirRegexByYear}}) {\n        group(field: relativeDirectory) {\n          fieldValue\n          totalCount\n        }\n      }\n    allMarkdownRemark(\n        filter: {fields: {slug: {regex: $mthDirRegexByYear}}}\n        sort: {fields: [frontmatter___date], order: DESC}\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 1000)\n            fields {\n              slug\n            }\n            frontmatter {\n              date\n              title\n              subtitle\n            }\n          }\n        }\n      }\n  }\n`\n\nexport default YearTemplate","function monthNumberToName(number: string): string {\n    switch (+number) {\n        case 1: { return 'January' }\n        case 2: { return 'February' }\n        case 3: { return 'March' }\n        case 4: { return 'April' }\n        case 5: { return 'May' }\n        case 6: { return 'June' }\n        case 7: { return 'July' }\n        case 8: { return 'August' }\n        case 9: { return 'September' }\n        case 10: { return 'October' }\n        case 11: { return 'November' }\n        case 12: { return 'December' }\n        default: { return '' }\n    }\n}\n\nexport default monthNumberToName"],"names":["data","year","pageContext","siteTitle","site","siteMetadata","title","group","allFile","months","allDirectory","edges","entries","allMarkdownRemark","keywords","className","map","node","monthName","monthNumberToName","name","month","filter","monthDir","fieldValue","slice","key","Link","to","totalCount","frontmatter","fields","slug","date","dangerouslySetInnerHTML","__html","excerpt","number"],"sourceRoot":""}