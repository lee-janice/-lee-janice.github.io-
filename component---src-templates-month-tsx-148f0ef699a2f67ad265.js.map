{"version":3,"file":"component---src-templates-month-tsx-148f0ef699a2f67ad265.js","mappings":"uIAoCA,IAzBqC,SAAC,GAM/B,IALHA,EAKE,EALFA,MACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,KACAC,EAEE,EAFFA,OACAC,EACE,EADFA,QAGA,OADAC,QAAQC,IAAIL,GAERM,EAAAA,cAAAA,MAAAA,CAAKC,IAAKP,GACNM,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACE,EAAAA,KAAD,CAAMC,GAAIT,GAAOD,GAASC,IAE9BM,EAAAA,cAAAA,QAAAA,KACKL,EADL,cAEaC,EAAOQ,KAAI,SAACC,EAAOC,EAAGC,GAAX,OAChBP,EAAAA,cAACE,EAAAA,KAAD,CAAMC,GAAE,WAAaE,EAAb,KACFC,EAAIC,EAAIC,OAAS,EAAKH,EAAQ,KAAOA,OAGnDL,EAAAA,cAAAA,IAAAA,CAAGS,wBAAyB,CAAEC,OAAQb,Q,iFCgFlD,UA9FuC,SAAC,GAA2B,IAAzBc,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACpCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACRC,EAAYJ,EAAKK,KAAKC,aAAaxB,MACnCyB,EAAcP,EAAKK,KAAKC,aAAaC,YACrCC,EAAUR,EAAKS,kBAAkBC,MAEvC,OACIrB,EAAAA,cAACsB,EAAAA,EAAD,CAAQ7B,MAAOsB,GACXf,EAAAA,cAACuB,EAAAA,EAAD,CACI9B,MAAK,QAAUoB,EAAV,WAAyBC,EAAzB,IACLU,SAAU,CAAC,UAAWX,EAAMC,KAEhCd,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAAA,QAAUa,EAAV,WAAwBC,EAAxB,KACAd,EAAAA,cAAAA,IAAAA,CAAGyB,UAAU,YAAb,sCACuCC,EAAAA,EAAAA,GAAkBZ,GADzD,IACkED,GAElEb,EAAAA,cAAAA,IAAAA,CAAGyB,UAAU,YAAb,8BAEmBP,IAGvBlB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKyB,UAAS,gBACTN,EAAQf,KAAI,gBAAGuB,EAAH,EAAGA,KAAH,OACT3B,EAAAA,cAAC4B,EAAAA,EAAD,CACInC,MAAWkC,EAAKE,YAAYpC,MAC5BC,KAAWiC,EAAKG,OAAOpC,KACvBC,KAAWgC,EAAKE,YAAYlC,KAC5BC,OAAW+B,EAAKE,YAAYjC,OAC5BC,QAAW8B,EAAK9B,kB,mBC9B5C,IAlBA,SAA2BkC,GACvB,QAASA,GACL,KAAK,EAAK,MAAO,UACjB,KAAK,EAAK,MAAO,WACjB,KAAK,EAAK,MAAO,QACjB,KAAK,EAAK,MAAO,QACjB,KAAK,EAAK,MAAO,MACjB,KAAK,EAAK,MAAO,OACjB,KAAK,EAAK,MAAO,OACjB,KAAK,EAAK,MAAO,SACjB,KAAK,EAAK,MAAO,YACjB,KAAK,GAAM,MAAO,UAClB,KAAK,GAAM,MAAO,WAClB,KAAK,GAAM,MAAO,WAClB,QAAW,MAAO","sources":["webpack://acozy-space/./src/components/postPreview.tsx","webpack://acozy-space/./src/templates/month.tsx","webpack://acozy-space/./src/util/monthNumberToName.ts"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface Props {\n    readonly title?: string,\n    readonly slug: string,\n    readonly date: string,\n    readonly topics: [string],\n    readonly excerpt: string,\n}\n\nconst PostPreview: React.FC<Props> = ({\n    title, \n    slug, \n    date,\n    topics, \n    excerpt\n}) => {\n    console.log(slug)\n    return (\n        <div key={slug}>\n            <h3>\n                <Link to={slug}>{title || slug}</Link>\n            </h3>\n            <small>\n                {date} ○\n                topics: {topics.map((topic, i, arr) => \n                    <Link to={`/topics/${topic}/`}>\n                        {(i < arr.length - 1) ? topic + ', ' : topic}\n                    </Link>)}\n            </small>\n            <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n        </div>\n    )\n}\n\nexport default PostPreview","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport monthNumberToName from '../util/monthNumberToName'\nimport PostPreview from '../components/postPreview'\n\ninterface Props {\n    readonly data: PageQueryData\n    readonly pageContext: {\n        year: string\n        month: string\n        dirRegexByYearAndMonth: string\n    }\n}\n\nconst MonthTemplate: React.FC<Props> = ({ data, pageContext }) => {\n    const { year, month } = pageContext\n    const siteTitle = data.site.siteMetadata.title\n    const lastUpdated = data.site.siteMetadata.lastUpdated\n    const entries = data.allMarkdownRemark.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head\n                title={`Year:${year}, month:${month}.`}\n                keywords={[`journal`, year, month]}\n            />\n            <header>\n                <h1>Year:{year}, month:{month}.</h1>\n                <p className='subtitle'>\n                    Collection of journal entries for {monthNumberToName(month)} {year}\n                </p>\n                <p className='pageinfo'>\n                    2021-09-18 ○\n                    last updated: {lastUpdated}\n                </p>\n            </header>\n            <br />\n            <article>\n                <div className={`page-content`}>\n                    {entries.map(({ node }) => \n                        <PostPreview \n                            title   = {node.frontmatter.title}\n                            slug    = {node.fields.slug}\n                            date    = {node.frontmatter.date}\n                            topics  = {node.frontmatter.topics}\n                            excerpt = {node.excerpt}/>\n                    )}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n            lastUpdated: string\n        }\n    }\n    allMarkdownRemark: {\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    date: string\n                    title: string\n                    subtitle: string\n                    topics: [string]\n                }\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query MonthPage($dirRegexByYearAndMonth: String) {\n    site {\n      siteMetadata {\n        title\n        lastUpdated\n      }\n    }\n    allMarkdownRemark(\n        filter: {fields: {slug: {regex: $dirRegexByYearAndMonth}}}\n        sort: {fields: [frontmatter___date], order: DESC}\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 1000)\n            fields {\n              slug\n            }\n            frontmatter {\n              date\n              title\n              subtitle\n              topics\n            }\n          }\n        }\n      }\n  }\n`\n\nexport default MonthTemplate","function monthNumberToName(number: string): string {\n    switch (+number) {\n        case 1: { return 'January' }\n        case 2: { return 'February' }\n        case 3: { return 'March' }\n        case 4: { return 'April' }\n        case 5: { return 'May' }\n        case 6: { return 'June' }\n        case 7: { return 'July' }\n        case 8: { return 'August' }\n        case 9: { return 'September' }\n        case 10: { return 'October' }\n        case 11: { return 'November' }\n        case 12: { return 'December' }\n        default: { return '' }\n    }\n}\n\nexport default monthNumberToName"],"names":["title","slug","date","topics","excerpt","console","log","React","key","Link","to","map","topic","i","arr","length","dangerouslySetInnerHTML","__html","data","pageContext","year","month","siteTitle","site","siteMetadata","lastUpdated","entries","allMarkdownRemark","edges","Layout","Head","keywords","className","monthNumberToName","node","PostPreview","frontmatter","fields","number"],"sourceRoot":""}