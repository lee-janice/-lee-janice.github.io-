{"version":3,"file":"component---src-templates-tag-tsx-f1da5cc5688fc7e5c9bd.js","mappings":"kKAiGA,UApFqC,SAAC,GAA0B,IAAxBA,EAAwB,EAAxBA,KAC5BC,EADoD,EAAlBC,YAClCD,IACFE,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACI,gBAAC,IAAD,CAAQH,MAAOH,GACX,gBAAC,IAAD,CACIG,MAAK,gBAAkBL,EAAlB,IACLS,SAAU,CAAC,OAAD,8BAA0CT,KAExD,+BACI,8BACI,mCAAWA,IAEf,uBAAKU,UAAS,gBACTJ,EAAMK,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACJP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACI,uBAAKC,IAAKJ,EAAKE,OAAOC,MAClB,0BACI,gBAAC,EAAAE,KAAD,CAAMC,GAAIN,EAAKE,OAAOC,MAAOV,IAEjC,6BAAQO,EAAKC,YAAYM,MACzB,qBAAGC,wBAAyB,CAAEC,OAAQT,EAAKC,YAAYS","sources":["webpack://acozy-space/./src/templates/tag.tsx"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n    readonly data: PageQueryData\n    readonly pageContext: {\n        tag: string\n    }\n}\n\nconst TagTemplate: React.FC<Props> = ({ data, pageContext }) => {\n    const { tag } = pageContext\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head\n                title={`Posts about '${tag}'`}\n                keywords={[`blog`, `gatsby`, `javascript`, `react`, tag]}\n            />\n            <article>\n                <header>\n                    <h1>Topic:{tag}</h1>\n                </header>\n                <div className={`page-content`}>\n                    {posts.map(({ node }) => {\n                        const title = node.frontmatter.title || node.fields.slug\n                        return (\n                            <div key={node.fields.slug}>\n                                <h3>\n                                    <Link to={node.fields.slug}>{title}</Link>\n                                </h3>\n                                <small>{node.frontmatter.date}</small>\n                                <p dangerouslySetInnerHTML={{ __html: node.frontmatter.subtitle }} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n        }\n    }\n    allMarkdownRemark: {\n        totalCount: number\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    date: string\n                    title: string\n                    subtitle: string\n                }\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 1000, filter: {frontmatter: {tags: {in: [$tag]}}}) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 2500)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            subtitle\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TagTemplate"],"names":["data","tag","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","className","map","node","frontmatter","fields","slug","key","Link","to","date","dangerouslySetInnerHTML","__html","subtitle"],"sourceRoot":""}