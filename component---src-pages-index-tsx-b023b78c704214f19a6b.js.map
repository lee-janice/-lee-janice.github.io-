{"version":3,"file":"component---src-pages-index-tsx-b023b78c704214f19a6b.js","mappings":"kKAoGA,UA1F+B,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAC1BC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQH,MAAOH,GACb,gBAAC,IAAD,CAAMG,MAAM,OAAOI,SAAU,CAAC,OAAD,iCAC7B,gFACA,qBAAGC,UAAU,YAAb,uDACA,yCACA,2BACA,ygBAMA,0CACA,2BACA,+BACE,uBAAKA,UAAS,gBACXJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,uBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,0BACE,gBAAC,EAAAE,KAAD,CAAMC,GAAIN,EAAKE,OAAOC,MAAOV,IAE/B,6BAAQO,EAAKC,YAAYM,MACzB,qBAAGC,wBAAyB,CAAEC,OAAQT,EAAKC,YAAYS","sources":["webpack://acozy-space/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst Index: React.FC<Props> = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title=\"Home\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <h1>Welcome to my website. Why don't you stay a while?</h1>\n      <p className='subtitle'>Website homepage; a short description; recent posts</p>\n      <h2>Description</h2>\n      <hr />\n      <p>\n        This is my website.\n        I created it primarily for experiential use as a centralized knowledge/content base and as an outlet for my increasingly erratic thoughts and curiosities.\n        I hope that it will be a comprehensible introduction into some of the machinations of my mind, and I hope that you will enjoy your stay here!\n        For information about me, see the About page; for information about the purpose and design of this site, see the Design page; to contact me, email me at janice.lee@pomona.edu.\n      </p>\n      <h2>Recent posts</h2>\n      <hr />\n      <article>\n        <div className={`page-content`}>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div key={node.fields.slug}>\n                <h3>\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.frontmatter.subtitle }} />\n              </div>\n            )\n          })}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        fields: {\n          slug: string\n        }\n        frontmatter: {\n          date: string\n          title: string\n          subtitle: string\n        }\n      }\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            subtitle\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index"],"names":["data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","className","map","node","frontmatter","fields","slug","key","Link","to","date","dangerouslySetInnerHTML","__html","subtitle"],"sourceRoot":""}