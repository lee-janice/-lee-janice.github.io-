{"version":3,"file":"component---src-pages-essays-tsx-1a147859f78fd06abd2e.js","mappings":"kKAyHA,UA/GgC,SAAC,GAAa,IAAXA,EAAW,EAAXA,KACzBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAcL,EAAKE,KAAKC,aAAaE,YACrCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACIC,EAAAA,cAACC,EAAAA,EAAD,CAAQN,MAAOH,GACXQ,EAAAA,cAACE,EAAAA,EAAD,CAAMP,MAAM,SAASQ,SAAU,CAAC,WAChCH,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAAA,WACAA,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,YAAb,2CACAJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,YAAb,8BAEmBR,IAGvBI,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKI,UAAS,gBACVJ,EAAAA,cAAAA,KAAAA,KAAAA,iBACAA,EAAAA,cAAAA,KAAAA,MACCH,EAAMQ,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACJX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KACpD,OACIT,EAAAA,cAAAA,MAAAA,CAAKU,IAAKJ,EAAKE,OAAOC,MAClBT,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACW,EAAAA,KAAD,CAAMC,GAAIN,EAAKE,OAAOC,MAAOd,IAEjCK,EAAAA,cAAAA,QAAAA,KACKM,EAAKC,YAAYM,KADtB,cAEaP,EAAKC,YAAYO,OAAOT,KAAI,SAACU,EAAOC,EAAGC,GAAX,OACjCjB,EAAAA,cAACW,EAAAA,KAAD,CAAMC,GAAE,WAAaG,EAAb,IAAuBL,IAAKK,GAC9BC,EAAIC,EAAIC,OAAS,EAAKH,EAAQ,KAAOA,EAFtC,KAKbf,EAAAA,cAAAA,IAAAA,CAAGmB,wBAAyB,CAAEC,OAAQd,EAAKC,YAAYc,YAdlE,MApBrB,C","sources":["webpack://acozy-space/./src/pages/essays.tsx"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n    readonly data: PageQueryData\n}\n\nconst Essays: React.FC<Props> = ({ data }) => {\n    const siteTitle = data.site.siteMetadata.title\n    const lastUpdated = data.site.siteMetadata.lastUpdated\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head title=\"Essays\" keywords={[`essay`]} />\n            <header>\n                <h1>Essays.</h1>\n                <p className='subtitle'>Collection of all essays; recent essays</p>\n                <p className='pageinfo'>\n                    2021-10-01 ○\n                    last updated: {lastUpdated}\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    <h2>Recent essays</h2>\n                    <hr />\n                    {posts.map(({ node }) => {\n                        const title = node.frontmatter.title || node.fields.slug\n                        return (\n                            <div key={node.fields.slug}>\n                                <h3>\n                                    <Link to={node.fields.slug}>{title}</Link>\n                                </h3>\n                                <small>\n                                    {node.frontmatter.date} ○\n                                    topics: {node.frontmatter.topics.map((topic, i, arr) => \n                                        <Link to={`/topics/${topic}/`} key={topic}>\n                                            {(i < arr.length - 1) ? topic + ', ' : topic}\n                                        </Link>)}\n                                </small>\n                                <p dangerouslySetInnerHTML={{ __html: node.frontmatter.subtitle }} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n            lastUpdated: string\n        }\n    }\n    allMarkdownRemark: {\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    date: string\n                    title: string\n                    subtitle: string\n                    topics: [string]\n                }\n            }\n        }[]\n        group: {\n            fieldValue: string\n            totalCount: number\n        }[]\n    }\n    allDirectory: {\n        edges: {\n            node: {\n                name: string\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        lastUpdated\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {category: {eq: \"essays\"}, published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 1000)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            subtitle\n            topics\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Essays"],"names":["data","siteTitle","site","siteMetadata","title","lastUpdated","posts","allMarkdownRemark","edges","React","Layout","Head","keywords","className","map","node","frontmatter","fields","slug","key","Link","to","date","topics","topic","i","arr","length","dangerouslySetInnerHTML","__html","subtitle"],"sourceRoot":""}