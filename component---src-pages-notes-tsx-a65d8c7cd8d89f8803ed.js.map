{"version":3,"file":"component---src-pages-notes-tsx-a65d8c7cd8d89f8803ed.js","mappings":"uIAgDA,IAlCqC,SAAC,GAS/B,IARHA,EAQE,EARFA,MACAC,EAOE,EAPFA,SACAC,EAME,EANFA,KACAC,EAKE,EALFA,KACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,QACAC,EACE,EADFA,YAIA,OAFAJ,EAAOA,EAAKK,MAAM,EAAG,IACrBJ,EAAcA,EAAYI,MAAM,EAAG,IAE/BC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAIT,GAAOF,GAASE,IAE9BO,EAAAA,cAAAA,QAAAA,KACKN,EADL,oBAC4BC,EAD5B,aACmD,IAC9CC,EAAOO,KAAI,SAACC,EAAOC,EAAGC,GAAX,OACRN,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAE,WAAaE,EAAb,IAAuBG,IAAKH,GAC/BC,EAAIC,EAAIE,OAAS,EAAIJ,EAAQ,KAAOA,EAF5C,KAMJN,EACGE,EAAAA,cAAAA,IAAAA,CAAGS,wBAAyB,CAAEC,OAAQb,KAEtCG,EAAAA,cAAAA,IAAAA,CAAGS,wBAAyB,CAAEC,OAAQlB,KA5BtD,C,0ECgHA,UAlH+B,SAAC,GAAa,IAAXmB,EAAW,EAAXA,KACxBC,EAAYD,EAAKE,KAAKC,aAAavB,MACnCI,EAAcgB,EAAKE,KAAKC,aAAanB,YACrCoB,EAAQJ,EAAKK,kBAAkBC,MAErC,OACIjB,EAAAA,cAACkB,EAAAA,EAAD,CAAQ3B,MAAOqB,GACXZ,EAAAA,cAACmB,EAAAA,EAAD,CAAM5B,MAAM,QAAQ6B,SAAU,CAAC,UAC/BpB,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAAA,SACAA,EAAAA,cAAAA,IAAAA,CAAGqB,UAAU,YAAb,yCAGArB,EAAAA,cAAAA,IAAAA,CAAGqB,UAAU,YAAb,8BACgC1B,IAGpCK,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKqB,UAAS,gBACVrB,EAAAA,cAAAA,KAAAA,KAAAA,gBACAA,EAAAA,cAAAA,KAAAA,MACCe,EAAMZ,KAAI,gBAAGmB,EAAH,EAAGA,KAAH,OACPtB,EAAAA,cAACuB,EAAAA,EAAD,CACIhB,IAAKe,EAAKE,OAAO/B,KACjBF,MAAO+B,EAAKG,YAAYlC,MACxBC,SAAU8B,EAAKG,YAAYjC,SAC3BC,KAAM6B,EAAKE,OAAO/B,KAClBC,KAAM4B,EAAKG,YAAY/B,KACvBC,YAAa2B,EAAKG,YAAYC,YAC9B9B,OAAQ0B,EAAKG,YAAY7B,OACzBC,QAASyB,EAAKzB,QACdC,aAAa,GAVpB,MArBrB,C","sources":["webpack://acozy-space/./src/components/postPreview.tsx","webpack://acozy-space/./src/pages/notes.tsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n    readonly title?: string\n    readonly subtitle: string\n    readonly slug: string\n    readonly date: string\n    readonly lastUpdated: string\n    readonly topics: [string]\n    readonly excerpt: string\n    readonly showExcerpt: boolean\n}\n\nconst PostPreview: React.FC<Props> = ({\n    title,\n    subtitle,\n    slug,\n    date,\n    lastUpdated,\n    topics,\n    excerpt,\n    showExcerpt,\n}) => {\n    date = date.slice(0, 10)\n    lastUpdated = lastUpdated.slice(0, 10)\n    return (\n        <div>\n            <h3>\n                <Link to={slug}>{title || slug}</Link>\n            </h3>\n            <small>\n                {date} ○ last updated: {lastUpdated} ○ topics:{\" \"}\n                {topics.map((topic, i, arr) => (\n                    <Link to={`/topics/${topic}/`} key={topic}>\n                        {i < arr.length - 1 ? topic + \", \" : topic}\n                    </Link>\n                ))}\n            </small>\n            {showExcerpt ? (\n                <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n            ) : (\n                <p dangerouslySetInnerHTML={{ __html: subtitle }} />\n            )}\n        </div>\n    )\n}\n\nexport default PostPreview\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Head from \"../components/head\"\nimport PostPreview from \"../components/postPreview\"\nimport { nodeTypes } from \"@mdx-js/mdx\"\n\ninterface Props {\n    readonly data: PageQueryData\n}\n\nconst Notes: React.FC<Props> = ({ data }) => {\n    const siteTitle = data.site.siteMetadata.title\n    const lastUpdated = data.site.siteMetadata.lastUpdated\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head title=\"Notes\" keywords={[`note`]} />\n            <header>\n                <h1>Notes</h1>\n                <p className=\"subtitle\">\n                    Collection of all notes; recent notes\n                </p>\n                <p className=\"pageinfo\">\n                    2021-10-01 ○ last updated: {lastUpdated}\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    <h2>Recent notes</h2>\n                    <hr />\n                    {posts.map(({ node }) => (\n                        <PostPreview\n                            key={node.fields.slug}\n                            title={node.frontmatter.title}\n                            subtitle={node.frontmatter.subtitle}\n                            slug={node.fields.slug}\n                            date={node.frontmatter.date}\n                            lastUpdated={node.frontmatter.lastupdated}\n                            topics={node.frontmatter.topics}\n                            excerpt={node.excerpt}\n                            showExcerpt={false}\n                        />\n                    ))}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n            lastUpdated: string\n        }\n    }\n    allMarkdownRemark: {\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    title: string\n                    subtitle: string\n                    date: string\n                    lastupdated: string\n                    topics: [string]\n                }\n            }\n        }[]\n        group: {\n            fieldValue: string\n            totalCount: number\n        }[]\n    }\n    allDirectory: {\n        edges: {\n            node: {\n                name: string\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                lastUpdated\n            }\n        }\n        allMarkdownRemark(\n            filter: {\n                frontmatter: {\n                    category: { eq: \"notes\" }\n                    published: { ne: false }\n                }\n            }\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: 10\n        ) {\n            edges {\n                node {\n                    excerpt(pruneLength: 1000)\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        subtitle\n                        date\n                        lastupdated\n                        topics\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default Notes\n"],"names":["title","subtitle","slug","date","lastUpdated","topics","excerpt","showExcerpt","slice","React","Link","to","map","topic","i","arr","key","length","dangerouslySetInnerHTML","__html","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","Layout","Head","keywords","className","node","PostPreview","fields","frontmatter","lastupdated"],"sourceRoot":""}