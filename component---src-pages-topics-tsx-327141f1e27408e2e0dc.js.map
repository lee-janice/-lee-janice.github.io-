{"version":3,"file":"component---src-pages-topics-tsx-327141f1e27408e2e0dc.js","mappings":"kKAiFA,UAvEgC,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACzBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAcL,EAAKE,KAAKC,aAAaE,YACrCC,EAAQN,EAAKO,mBAAqBP,EAAKO,kBAAkBD,MAE/D,OACI,gBAAC,IAAD,CAAQF,MAAOH,GACX,gBAAC,IAAD,CAAMG,MAAM,UAAUI,SAAU,KAChC,8BACI,qCACA,qBAAGC,UAAU,YAAb,gFACA,qBAAGA,UAAU,YAAb,8BAEmBJ,IAGvB,+BACI,uBAAKI,UAAS,gBACTH,GACGA,EAAMI,KACF,SAAAC,GAAK,OACDA,GACI,uBAAKC,IAAKD,EAAME,YACZ,0BACI,gBAAC,EAAAC,KAAD,CAAMC,GAAE,WAAaJ,EAAME,WAAnB,KAAmCF,EAAME,aAErD,6BACKF,EAAMK,WADX,QAE0B,IAArBL,EAAMK,WAAmB,GAAK","sources":["webpack://acozy-space/./src/pages/topics.tsx"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n    readonly data: PageQueryData\n}\n\nconst Topics: React.FC<Props> = ({ data }) => {\n    const siteTitle = data.site.siteMetadata.title\n    const lastUpdated = data.site.siteMetadata.lastUpdated\n    const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n    return (\n        <Layout title={siteTitle}>\n            <Head title=\"Topics.\" keywords={[]} />\n            <header>\n                <h1>Topics.</h1>\n                <p className='subtitle'>Collection of topics that are discussed on my website, listed alphabetically</p>\n                <p className='pageinfo'>\n                    2021-09-18 â—‹\n                    last updated: {lastUpdated}\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    {group &&\n                        group.map(\n                            topic =>\n                                topic && (\n                                    <div key={topic.fieldValue}>\n                                        <h3>\n                                            <Link to={`/topics/${topic.fieldValue}/`}>{topic.fieldValue}</Link>\n                                        </h3>\n                                        <small>\n                                            {topic.totalCount} post\n                                            {topic.totalCount === 1 ? '' : 's'}\n                                        </small>\n                                    </div>\n                                ),\n                        )}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n            lastUpdated: string\n        }\n    }\n    allMarkdownRemark: {\n        group: {\n            fieldValue: string\n            totalCount: number\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        lastUpdated\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___topics) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Topics"],"names":["data","siteTitle","site","siteMetadata","title","lastUpdated","group","allMarkdownRemark","keywords","className","map","topic","key","fieldValue","Link","to","totalCount"],"sourceRoot":""}