{"version":3,"file":"component---src-templates-topic-tsx-622c0c885f47fc8cd7df.js","mappings":"sIA0CA,IA5BqC,SAAC,GAS/B,IARHA,EAQE,EARFA,MACAC,EAOE,EAPFA,SACAC,EAME,EANFA,KACAC,EAKE,EALFA,KACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,QACAC,EACE,EADFA,YAEA,OACIC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAIR,GAAOF,GAASE,IAE9BM,EAAAA,cAAAA,QAAAA,KACKL,EADL,oBAEmBC,EAFnB,cAGaC,EAAOM,KAAI,SAACC,EAAOC,EAAGC,GAAX,OAChBN,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAE,WAAaE,EAAb,IAAuBG,IAAKH,GAC9BC,EAAIC,EAAIE,OAAS,EAAKJ,EAAQ,KAAOA,OAGlDL,EAAcC,EAAAA,cAAAA,IAAAA,CAAGS,wBAAyB,CAAEC,OAAQZ,KAAgBE,EAAAA,cAAAA,IAAAA,CAAGS,wBAAyB,CAAEC,OAAQjB,Q,uEC2EvH,UAlGuC,SAAC,GAA2B,IAAzBkB,EAAwB,EAAxBA,KAC9BP,EADsD,EAAlBQ,YACpCR,MACFS,EAAYF,EAAKG,KAAKC,aAAavB,MACnCI,EAAce,EAAKG,KAAKC,aAAanB,YACrCoB,EAAQL,EAAKM,kBAAkBC,MAErC,OACIlB,EAAAA,cAACmB,EAAAA,EAAD,CAAQ3B,MAAOqB,GACXb,EAAAA,cAACoB,EAAAA,EAAD,CACI5B,MAAK,SAAWY,EAAX,KACLiB,SAAU,CAAC,OAAD,8BAA0CjB,KAExDJ,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAAA,SAAWI,EAAX,KACAJ,EAAAA,cAAAA,IAAAA,CAAGsB,UAAU,YAAb,qCACuClB,EADvC,KAGAJ,EAAAA,cAAAA,IAAAA,CAAGsB,UAAU,YAAb,8BAEmB1B,IAGvBI,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKsB,UAAS,gBACTN,EAAMb,KAAI,gBAAGoB,EAAH,EAAGA,KAAH,OACPvB,EAAAA,cAACwB,EAAAA,EAAD,CAAajB,IAAKgB,EAAKE,OAAO/B,KAC1BF,MAAe+B,EAAKG,YAAYlC,MAChCC,SAAe8B,EAAKG,YAAYjC,SAChCC,KAAe6B,EAAKE,OAAO/B,KAC3BC,KAAe4B,EAAKG,YAAY/B,KAChCC,YAAe2B,EAAKG,YAAYC,YAChC9B,OAAe0B,EAAKG,YAAY7B,OAChCC,QAAeyB,EAAKzB,QACpBC,aAAe","sources":["webpack://acozy-space/./src/components/postPreview.tsx","webpack://acozy-space/./src/templates/topic.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface Props {\n    readonly title?: string,\n    readonly subtitle: string,\n    readonly slug: string,\n    readonly date: string,\n    readonly lastUpdated: string,\n    readonly topics: [string],\n    readonly excerpt: string,\n    readonly showExcerpt: boolean,\n}\n\nconst PostPreview: React.FC<Props> = ({\n    title, \n    subtitle, \n    slug, \n    date,\n    lastUpdated,\n    topics, \n    excerpt,\n    showExcerpt\n}) => {\n    return (\n        <div>\n            <h3>\n                <Link to={slug}>{title || slug}</Link>\n            </h3>\n            <small>\n                {date} ○\n                last updated: {lastUpdated} ○\n                topics: {topics.map((topic, i, arr) => \n                    <Link to={`/topics/${topic}/`} key={topic}>\n                        {(i < arr.length - 1) ? topic + ', ' : topic}\n                    </Link>)}\n            </small>\n            {showExcerpt ? <p dangerouslySetInnerHTML={{ __html: excerpt }} /> : <p dangerouslySetInnerHTML={{ __html: subtitle }} />}\n        </div>\n    )\n}\n\nexport default PostPreview","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport PostPreview from '../components/postPreview'\n\ninterface Props {\n    readonly data: PageQueryData\n    readonly pageContext: {\n        topic: string\n    }\n}\n\nconst TopicTemplate: React.FC<Props> = ({ data, pageContext }) => {\n    const { topic } = pageContext\n    const siteTitle = data.site.siteMetadata.title\n    const lastUpdated = data.site.siteMetadata.lastUpdated\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n        <Layout title={siteTitle}>\n            <Head\n                title={`Topic:${topic}.'`}\n                keywords={[`blog`, `gatsby`, `javascript`, `react`, topic]}\n            />\n            <header>\n                <h1>Topic:{topic}.</h1>\n                <p className='subtitle'>\n                    Collection of posts on the topic `{topic}`\n                </p>\n                <p className='pageinfo'>\n                    2021-09-27 ○\n                    last updated: {lastUpdated}\n                </p>\n            </header>\n            <article>\n                <div className={`page-content`}>\n                    {posts.map(({ node }) => \n                        <PostPreview key={node.fields.slug}\n                            title       = {node.frontmatter.title}\n                            subtitle    = {node.frontmatter.subtitle}\n                            slug        = {node.fields.slug}\n                            date        = {node.frontmatter.date}\n                            lastUpdated = {node.frontmatter.lastupdated}\n                            topics      = {node.frontmatter.topics}\n                            excerpt     = {node.excerpt}\n                            showExcerpt = {false}/>\n                    )}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n            lastUpdated: string\n        }\n    }\n    allMarkdownRemark: {\n        totalCount: number\n        edges: {\n            node: {\n                excerpt: string\n                fields: {\n                    slug: string\n                }\n                frontmatter: {\n                    title: string\n                    subtitle: string\n                    date: string\n                    lastupdated: string\n                    topics: [string]\n                }\n            }\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query TopicPage($topic: String) {\n    site {\n      siteMetadata {\n        title\n        lastUpdated\n      }\n    }\n    allMarkdownRemark(limit: 1000, filter: {frontmatter: {topics: {in: [$topic]}, published: {ne: false}}}) {\n        \n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 2500)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            subtitle\n            date(formatString: \"YYYY-MM-DD\")\n            lastupdated(formatString: \"YYYY-MM-DD\")\n            topics\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TopicTemplate"],"names":["title","subtitle","slug","date","lastUpdated","topics","excerpt","showExcerpt","React","Link","to","map","topic","i","arr","key","length","dangerouslySetInnerHTML","__html","data","pageContext","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","Layout","Head","keywords","className","node","PostPreview","fields","frontmatter","lastupdated"],"sourceRoot":""}