{"version":3,"file":"component---src-pages-tags-tsx-2b0f798599ed7574f4b7.js","mappings":"iKAuEA,UA7D8B,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACvBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,mBAAqBN,EAAKM,kBAAkBD,MAE/D,OACI,gBAAC,IAAD,CAAQD,MAAOH,GACX,gBAAC,IAAD,CAAMG,MAAM,SAASG,SAAU,CAAC,OAAD,iCAC/B,+BACI,oCACA,uBAAKC,UAAS,gBACTH,GACGA,EAAMI,KACF,SAAAC,GAAG,OACCA,GACI,uBAAKC,IAAKD,EAAIE,YACV,0BACI,gBAAC,EAAAC,KAAD,CAAMC,GAAE,SAAWJ,EAAIE,WAAf,KAA+BF,EAAIE,aAE/C,6BACKF,EAAIK,WADT,QAEwB,IAAnBL,EAAIK,WAAmB,GAAK","sources":["webpack://acozy-space/./src/pages/tags.tsx"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n    readonly data: PageQueryData\n}\n\nconst Tags: React.FC<Props> = ({ data }) => {\n    const siteTitle = data.site.siteMetadata.title\n    const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n    return (\n        <Layout title={siteTitle}>\n            <Head title=\"Topics\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n            <article>\n                <h1>Topics</h1>\n                <div className={`page-content`}>\n                    {group &&\n                        group.map(\n                            tag =>\n                                tag && (\n                                    <div key={tag.fieldValue}>\n                                        <h3>\n                                            <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                                        </h3>\n                                        <small>\n                                            {tag.totalCount} post\n                                            {tag.totalCount === 1 ? '' : 's'}\n                                        </small>\n                                    </div>\n                                ),\n                        )}\n                </div>\n            </article>\n        </Layout>\n    )\n}\n\ninterface PageQueryData {\n    site: {\n        siteMetadata: {\n            title: string\n        }\n    }\n    allMarkdownRemark: {\n        group: {\n            fieldValue: string\n            totalCount: number\n        }[]\n    }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags"],"names":["data","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","keywords","className","map","tag","key","fieldValue","Link","to","totalCount"],"sourceRoot":""}